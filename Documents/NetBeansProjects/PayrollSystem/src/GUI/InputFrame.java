package GUI;

import app.Employee;
import app.PayrollEditor;
import app.Tax;
import app.Wage;
import filehandling.Writer;
import java.awt.Font;
import java.awt.TextArea;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.time.DateTimeException;
import java.util.DuplicateFormatFlagsException;
import java.util.NoSuchElementException;
import utils.IllegalInputFromUser;
import utils.PayrollInterface;

/**
 *
 * @author MP
 */
public class InputFrame extends javax.swing.JFrame {

    private static PayrollInterface pay;

    /**
     * form InputFrame GUI for PayrollSystem project
     */
    public InputFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructodr to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneEW = new javax.swing.JTabbedPane();
        EmplMenuPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelLoadShowEmpls = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        tfEnterFileEmpl = new java.awt.TextField();
        lbMakeFileMessage = new javax.swing.JLabel();
        btnMakeNewFile = new javax.swing.JButton();
        btnShowEmpls = new javax.swing.JButton();
        textAreaEmployeeShowInfo = new java.awt.TextArea();
        btnEmplsSortByID = new javax.swing.JButton();
        btnEmplsSortByFirstName = new javax.swing.JButton();
        btnEmplsSortByLastName = new javax.swing.JButton();
        btnFindEmplByID = new javax.swing.JButton();
        jLabelSearchForID = new javax.swing.JLabel();
        jTextFieldEmplSearchForID = new javax.swing.JTextField();
        jLabelEmplsSorting = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanelAddNewEmpl = new javax.swing.JPanel();
        btnAddEmpl = new javax.swing.JButton();
        jPaneladdEmplData = new javax.swing.JPanel();
        jLabeleID = new javax.swing.JLabel();
        jTextFieldeID = new javax.swing.JTextField();
        jLabeleName = new javax.swing.JLabel();
        jTextFieldeName = new javax.swing.JTextField();
        jLabeleLastName = new javax.swing.JLabel();
        jTextFieldeLastName = new javax.swing.JTextField();
        jLabeleDateOfBirth = new javax.swing.JLabel();
        jTextFieldeedd = new javax.swing.JTextField();
        jLabeleNationality = new javax.swing.JLabel();
        jTextFieldeNationality = new javax.swing.JTextField();
        jLabeleHourTax = new javax.swing.JLabel();
        jTextFieldeHourTax = new javax.swing.JTextField();
        jLabelePositionName = new javax.swing.JLabel();
        jTextFieldePositionName = new javax.swing.JTextField();
        jLabeledd = new javax.swing.JLabel();
        jLabelemm = new javax.swing.JLabel();
        jTextFieldemm = new javax.swing.JTextField();
        jLabeleyyyy = new javax.swing.JLabel();
        jTextFieldeyyyy = new javax.swing.JTextField();
        btnEmplShowBeforeAdd = new javax.swing.JButton();
        textAreaShowListAfterAddedEmpl = new java.awt.TextArea();
        btnEmplsSaveAddedEmpl = new javax.swing.JButton();
        jLabelErrorMessageAddEmpl = new javax.swing.JLabel();
        WageMenuPanel = new javax.swing.JPanel();
        jTextFieldWageFilePath = new javax.swing.JTextField();
        jLabelWageFileWhours = new javax.swing.JLabel();
        jLabelWageEnterFileMessage = new javax.swing.JLabel();
        jButtonWageMakeNewFile = new javax.swing.JButton();
        textAreaWage = new java.awt.TextArea();
        jButtonWageShowHours = new javax.swing.JButton();
        jButtonAddHoursToEID = new javax.swing.JButton();
        jLabelWageAddHoursToEmplID = new javax.swing.JLabel();
        jLabelWageEnterEmplID = new javax.swing.JLabel();
        jTextFieldWageAddHoursEID = new javax.swing.JTextField();
        jLabelWageEnterWorkHours = new javax.swing.JLabel();
        jTextFieldWageEnterWorkHours = new javax.swing.JTextField();
        jButtonWageCalculateW = new javax.swing.JButton();
        jButtonWageSaweEIDhours = new javax.swing.JButton();
        jButtonWageSaveCalculatedWage = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabelWageCalculate = new javax.swing.JLabel();
        jLabelWageResultsFileName = new javax.swing.JLabel();
        jTextFieldWageResultsFileName = new javax.swing.JTextField();
        jLabelWageResultFileErrorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Payroll app");
        setMinimumSize(new java.awt.Dimension(1055, 588));

        jLabel1.setText("Enter file with employees - press ENTER button to load or use selection list of actual files");

        tfEnterFileEmpl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfEnterFileEmplKeyPressed(evt);
            }
        });

        btnMakeNewFile.setText("MakeNewFile");
        btnMakeNewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeNewFileActionPerformed(evt);
            }
        });

        btnShowEmpls.setText("ShowEmployeesInfo");
        btnShowEmpls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowEmplsActionPerformed(evt);
            }
        });

        textAreaEmployeeShowInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textAreaEmployeeShowInfo.setEditable(false);

        btnEmplsSortByID.setText("SortByID");
        btnEmplsSortByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmplsSortByIDActionPerformed(evt);
            }
        });

        btnEmplsSortByFirstName.setText("SortByFirstName");
        btnEmplsSortByFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmplsSortByFirstNameActionPerformed(evt);
            }
        });

        btnEmplsSortByLastName.setText("SortByLastName");
        btnEmplsSortByLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmplsSortByLastNameActionPerformed(evt);
            }
        });

        btnFindEmplByID.setText("FindEmployeeByID");
        btnFindEmplByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindEmplByIDActionPerformed(evt);
            }
        });

        jLabelSearchForID.setText("Enter ID to search Employee");

        jLabelEmplsSorting.setText("For SORT click on button");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLoadShowEmplsLayout = new javax.swing.GroupLayout(jPanelLoadShowEmpls);
        jPanelLoadShowEmpls.setLayout(jPanelLoadShowEmplsLayout);
        jPanelLoadShowEmplsLayout.setHorizontalGroup(
            jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLoadShowEmplsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLoadShowEmplsLayout.createSequentialGroup()
                        .addGroup(jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbMakeFileMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLoadShowEmplsLayout.createSequentialGroup()
                                .addGroup(jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanelLoadShowEmplsLayout.createSequentialGroup()
                                        .addComponent(tfEnterFileEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                                .addComponent(btnMakeNewFile, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(237, 237, 237)))
                        .addGap(65, 65, 65))
                    .addGroup(jPanelLoadShowEmplsLayout.createSequentialGroup()
                        .addGroup(jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnShowEmpls, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                .addComponent(btnEmplsSortByFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEmplsSortByID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEmplsSortByLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelSearchForID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelEmplsSorting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanelLoadShowEmplsLayout.createSequentialGroup()
                                .addComponent(jTextFieldEmplSearchForID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFindEmplByID, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textAreaEmployeeShowInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanelLoadShowEmplsLayout.setVerticalGroup(
            jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLoadShowEmplsLayout.createSequentialGroup()
                .addGroup(jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLoadShowEmplsLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMakeNewFile, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(jPanelLoadShowEmplsLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addGroup(jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfEnterFileEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(lbMakeFileMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLoadShowEmplsLayout.createSequentialGroup()
                        .addComponent(btnShowEmpls, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelEmplsSorting)
                        .addGap(2, 2, 2)
                        .addComponent(btnEmplsSortByID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEmplsSortByFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEmplsSortByLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelSearchForID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelLoadShowEmplsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnFindEmplByID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldEmplSearchForID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 127, Short.MAX_VALUE))
                    .addComponent(textAreaEmployeeShowInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        setFontMonospaced(textAreaEmployeeShowInfo);
        try{
            String[] files = filehandling.Writer.dataDirectory.list();
            jComboBox1.addItem("");
            for (String file : files){
                jComboBox1.addItem(file);
            }
            jComboBox1.setVisible(true);
        }catch (Exception e){
            e.getStackTrace();
        }

        jTabbedPane1.addTab("Load and Show Employee file", jPanelLoadShowEmpls);

        btnAddEmpl.setText("AddEmployee");
        btnAddEmpl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddEmpl.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAddEmpl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmplActionPerformed(evt);
            }
        });

        jLabeleID.setText("ID");

        jLabeleName.setText("FirstName");

        jLabeleLastName.setText("LastName");

        jLabeleDateOfBirth.setText("DateOfBirth");

        jLabeleNationality.setText("Nationality");

        jLabeleHourTax.setText("HourTax");

        jLabelePositionName.setText("PositionName");

        jLabeledd.setText("dd");

        jLabelemm.setText("mm");

        jLabeleyyyy.setText("yyyy");

        btnEmplShowBeforeAdd.setText("ShowEmployee");
        btnEmplShowBeforeAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmplShowBeforeAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPaneladdEmplDataLayout = new javax.swing.GroupLayout(jPaneladdEmplData);
        jPaneladdEmplData.setLayout(jPaneladdEmplDataLayout);
        jPaneladdEmplDataLayout.setHorizontalGroup(
            jPaneladdEmplDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneladdEmplDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneladdEmplDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabeleID)
                    .addComponent(jTextFieldeID, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeleName)
                    .addComponent(jTextFieldeName)
                    .addComponent(jLabeleLastName)
                    .addComponent(jTextFieldeLastName)
                    .addComponent(jLabeleDateOfBirth)
                    .addComponent(jLabeleNationality)
                    .addComponent(jTextFieldeNationality)
                    .addComponent(jLabeleHourTax)
                    .addComponent(jTextFieldeHourTax)
                    .addComponent(jLabelePositionName)
                    .addComponent(jTextFieldePositionName)
                    .addGroup(jPaneladdEmplDataLayout.createSequentialGroup()
                        .addComponent(jLabeledd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldeedd, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelemm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldemm, javax.swing.GroupLayout.PREFERRED_SIZE, 44, Short.MAX_VALUE)))
                .addGroup(jPaneladdEmplDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPaneladdEmplDataLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabeleyyyy, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldeyyyy, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPaneladdEmplDataLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEmplShowBeforeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPaneladdEmplDataLayout.setVerticalGroup(
            jPaneladdEmplDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneladdEmplDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneladdEmplDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPaneladdEmplDataLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabeleID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnEmplShowBeforeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabeleName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabeleLastName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldeLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabeleDateOfBirth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPaneladdEmplDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldeedd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeledd)
                    .addComponent(jLabelemm)
                    .addComponent(jTextFieldemm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeleyyyy)
                    .addComponent(jTextFieldeyyyy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabeleNationality)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldeNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabeleHourTax)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldeHourTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelePositionName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldePositionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        textAreaShowListAfterAddedEmpl.setEditable(false);

        btnEmplsSaveAddedEmpl.setText("SaveToFile");
        btnEmplsSaveAddedEmpl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmplsSaveAddedEmplActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAddNewEmplLayout = new javax.swing.GroupLayout(jPanelAddNewEmpl);
        jPanelAddNewEmpl.setLayout(jPanelAddNewEmplLayout);
        jPanelAddNewEmplLayout.setHorizontalGroup(
            jPanelAddNewEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddNewEmplLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPaneladdEmplData, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAddNewEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textAreaShowListAfterAddedEmpl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelAddNewEmplLayout.createSequentialGroup()
                        .addGroup(jPanelAddNewEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAddNewEmplLayout.createSequentialGroup()
                                .addComponent(btnAddEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(182, 182, 182)
                                .addComponent(btnEmplsSaveAddedEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelErrorMessageAddEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 232, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelAddNewEmplLayout.setVerticalGroup(
            jPanelAddNewEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddNewEmplLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAddNewEmplLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEmplsSaveAddedEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelErrorMessageAddEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(textAreaShowListAfterAddedEmpl, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanelAddNewEmplLayout.createSequentialGroup()
                .addComponent(jPaneladdEmplData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setFontMonospaced(textAreaShowListAfterAddedEmpl);

        jTabbedPane1.addTab("Add new Employee", jPanelAddNewEmpl);

        javax.swing.GroupLayout EmplMenuPanelLayout = new javax.swing.GroupLayout(EmplMenuPanel);
        EmplMenuPanel.setLayout(EmplMenuPanelLayout);
        EmplMenuPanelLayout.setHorizontalGroup(
            EmplMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmplMenuPanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        EmplMenuPanelLayout.setVerticalGroup(
            EmplMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmplMenuPanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPaneEW.addTab("Employee Menu", EmplMenuPanel);

        jTextFieldWageFilePath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldWageFilePathKeyPressed(evt);
            }
        });

        jLabelWageFileWhours.setText("Enter file of working hours (Employee ID _ work hours) - press ENTER button to load or use selection list of actual files");

        jButtonWageMakeNewFile.setText("MakeNewFile");
        jButtonWageMakeNewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWageMakeNewFileActionPerformed(evt);
            }
        });

        textAreaWage.setEditable(false);

        jButtonWageShowHours.setText("ShowHours");
        jButtonWageShowHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWageShowHoursActionPerformed(evt);
            }
        });

        jButtonAddHoursToEID.setText("AddHoursToE-ID");
        jButtonAddHoursToEID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddHoursToEIDActionPerformed(evt);
            }
        });

        jLabelWageAddHoursToEmplID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelWageAddHoursToEmplID.setText("AddHoursToEmployeeID");

        jLabelWageEnterEmplID.setText("Enter Employee's ID");

        jLabelWageEnterWorkHours.setText("Enter Work Hours");

        jButtonWageCalculateW.setText("CaculateWage");
        jButtonWageCalculateW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWageCalculateWActionPerformed(evt);
            }
        });

        jButtonWageSaweEIDhours.setText("SaveE-IDHours");
        jButtonWageSaweEIDhours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWageSaweEIDhoursActionPerformed(evt);
            }
        });

        jButtonWageSaveCalculatedWage.setText("SaveWage");
        jButtonWageSaveCalculatedWage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWageSaveCalculatedWageActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabelWageCalculate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelWageCalculate.setText("CalculateWage");

        jLabelWageResultsFileName.setText("Enter file name (txt/dat/xlsx)");

        javax.swing.GroupLayout WageMenuPanelLayout = new javax.swing.GroupLayout(WageMenuPanel);
        WageMenuPanel.setLayout(WageMenuPanelLayout);
        WageMenuPanelLayout.setHorizontalGroup(
            WageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WageMenuPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(WageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WageMenuPanelLayout.createSequentialGroup()
                        .addGroup(WageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelWageResultsFileName)
                            .addComponent(jTextFieldWageResultsFileName)
                            .addComponent(jLabelWageEnterEmplID)
                            .addComponent(jTextFieldWageAddHoursEID)
                            .addComponent(jTextFieldWageEnterWorkHours)
                            .addComponent(jLabelWageEnterWorkHours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAddHoursToEID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonWageShowHours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonWageCalculateW, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonWageSaweEIDhours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonWageSaveCalculatedWage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelWageCalculate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelWageAddHoursToEmplID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelWageResultFileErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textAreaWage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(WageMenuPanelLayout.createSequentialGroup()
                        .addGroup(WageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelWageEnterFileMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(WageMenuPanelLayout.createSequentialGroup()
                                .addGroup(WageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelWageFileWhours)
                                    .addGroup(WageMenuPanelLayout.createSequentialGroup()
                                        .addComponent(jTextFieldWageFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(20, 20, 20)
                                .addComponent(jButtonWageMakeNewFile)))
                        .addGap(0, 291, Short.MAX_VALUE))))
        );
        WageMenuPanelLayout.setVerticalGroup(
            WageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WageMenuPanelLayout.createSequentialGroup()
                .addGroup(WageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WageMenuPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelWageFileWhours))
                    .addGroup(WageMenuPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(WageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldWageFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonWageMakeNewFile, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelWageEnterFileMessage)))
                .addGap(16, 16, 16)
                .addGroup(WageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WageMenuPanelLayout.createSequentialGroup()
                        .addComponent(jButtonWageShowHours, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelWageAddHoursToEmplID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelWageEnterEmplID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWageAddHoursEID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelWageEnterWorkHours)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWageEnterWorkHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAddHoursToEID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonWageSaweEIDhours, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jLabelWageCalculate)
                        .addGap(2, 2, 2)
                        .addComponent(jButtonWageCalculateW, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelWageResultsFileName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWageResultsFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabelWageResultFileErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonWageSaveCalculatedWage, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 41, Short.MAX_VALUE))
                    .addComponent(textAreaWage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        setFontMonospaced(textAreaWage);
        try{
            String[] files = filehandling.Writer.dataDirectory.list();
            jComboBox2.addItem("");
            for (String file : files){
                jComboBox2.addItem(file);
            }
            jComboBox1.setVisible(true);
        }catch (Exception e){
            e.getStackTrace();
        }

        jTabbedPaneEW.addTab("Wage Menu", WageMenuPanel);

        getContentPane().add(jTabbedPaneEW, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method to obtain employee file name from input
     *
     * @return String
     * @throws IllegalInputFromUser
     */
    private String employeeFileName() throws IllegalInputFromUser {
        String employeeFile = tfEnterFileEmpl.getText();
        boolean checksuffix = employeeFile.endsWith(".txt") || employeeFile.endsWith(".dat");
        if (checksuffix) {
            return employeeFile;
        } else {
            throw new IllegalInputFromUser("Wrong file format - must be .txt or .dat");
        }
    }

    /**
     * Method to load employee file when press enter in textfield
     *
     * @param evt
     */
    private void tfEnterFileEmplKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfEnterFileEmplKeyPressed
        pay = new PayrollEditor();
        String employeeFile = null;
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                employeeFile = employeeFileName();
            } catch (IllegalInputFromUser iifu) {
                lbMakeFileMessage.setText(iifu.toString());
            }
            boolean makingDir = Writer.dataDirectory.mkdir();
            if (makingDir) {
                lbMakeFileMessage.setText("New directory has been created, press enter to continue");
            }
            try {
                File file = new File(Writer.dataDirectory, employeeFile);
                if (file.exists()) {
                    try {
                        pay.loadEmployees(employeeFile);
                        lbMakeFileMessage.setText("File have been loaded");
                    } catch (IOException ex) {
                        lbMakeFileMessage.setText("Error in loadEmployees from this file");
                    } catch (NoSuchElementException nsee) {
                        lbMakeFileMessage.setText("Wrong file. This file do NOT contain any EMPLOYEES");
                    } catch (DateTimeException dte) {
                        lbMakeFileMessage.setText("Wrong file or " + dte.toString());
                    }
                } else {
                    lbMakeFileMessage.setText("This file does not exist. Press MakeNewFile to create a new file");
                }
            } catch (NullPointerException npe) {
                lbMakeFileMessage.setText("FileField is null or unsupported file format, please write or select another file");
            }
        }
    }//GEN-LAST:event_tfEnterFileEmplKeyPressed

    /**
     * Method to make new file when press btn
     *
     * @param evt
     */
    private void btnMakeNewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeNewFileActionPerformed
        try {
            String employeeFile = null;
            try {
                employeeFile = employeeFileName();
            } catch (Exception ex) {
                ex.getStackTrace();
            }
            File file = new File(Writer.dataDirectory, employeeFile);
            try {
                if (!file.exists()) {
                    file.createNewFile();
                    lbMakeFileMessage.setText("New file has been made.");
                } else {
                    lbMakeFileMessage.setText("This file already exists");
                }
            } catch (IOException ex) {
                lbMakeFileMessage.setText("Creating new file failed!!!");
            }
        } catch (NullPointerException npe) {
            textAreaEmployeeShowInfo.setText("First you have to enter empl file");
        }
    }//GEN-LAST:event_btnMakeNewFileActionPerformed

    /**
     * Method to set font monospaced in textarea - for formatted output
     *
     * @param textArea
     */
    private void setFontMonospaced(TextArea textArea) {
        Font font = new Font(Font.MONOSPACED, Font.BOLD, 12);
        textArea.setFont(font);
    }

    /**
     * Method to show employees when press btn
     *
     * @param evt
     */
    private void btnShowEmplsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowEmplsActionPerformed
        try {
            String emplInfo = pay.getEmployeesInfo();
            emplInfo.split(System.lineSeparator());
            textAreaEmployeeShowInfo.setText(emplInfo);
            //setFontMonospaced();
        } catch (NullPointerException npe) {
            textAreaEmployeeShowInfo.setText("First you have to enter empl file");
        }
    }//GEN-LAST:event_btnShowEmplsActionPerformed

    /**
     * Method to add employee from user input information
     *
     * @return Employee or null
     */
    public static Employee addEmployee() {
        jLabelErrorMessageAddEmpl.setText("");
        Employee e;
        String id, fname, lname, dd, mm, yyyy, nationality, htax, job;
        id = jTextFieldeID.getText();
        fname = jTextFieldeName.getText();
        lname = jTextFieldeLastName.getText();
        dd = jTextFieldeedd.getText();
        mm = jTextFieldemm.getText();
        yyyy = jTextFieldeyyyy.getText();
        nationality = jTextFieldeNationality.getText();
        htax = jTextFieldeHourTax.getText();
        job = jTextFieldePositionName.getText();
        if (job.matches("[a-zA-Z0-9._-]+[ ]+[a-zA-Z0-9._-]+")) {
            job = job.replace(" ", "_");
        }
        try {
            int eid = Integer.parseInt(id);
            int day = Integer.parseInt(dd);
            int month = Integer.parseInt(mm);
            int year = Integer.parseInt(yyyy);
            double hourTax = Double.parseDouble(htax);
            Tax tax = new Tax(hourTax, job);
            e = new Employee(eid, fname, lname, day, month, year, nationality, tax);
            return e;
        } catch (NumberFormatException ex) {
            jLabelErrorMessageAddEmpl.setText("Invalid input - id,dd,mm,yyyy,hourtax must be number");
        } catch (DateTimeException dte) {
            jLabelErrorMessageAddEmpl.setText("Invalid input - wrong date");
        }
        return null;
    }

    /**
     * Method to add employee to list when press btn
     *
     * @param evt
     */
    private void btnAddEmplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmplActionPerformed
        try {
            try {
                Employee e = addEmployee();
                try {
                    pay.addEmployeeToList(e);
                } catch (DuplicateFormatFlagsException dffe) {
                    jLabelErrorMessageAddEmpl.setText(dffe.toString());
                }
                String emplInfo = pay.getEmployeesInfo();
                emplInfo.split(System.lineSeparator());
                textAreaShowListAfterAddedEmpl.setText(emplInfo);
            } catch (Exception ex) {
                jLabelErrorMessageAddEmpl.setText("Invalid input");
            }
            jTextFieldeID.setText("");
            jTextFieldeName.setText("");
            jTextFieldeLastName.setText("");
            jTextFieldeedd.setText("");
            jTextFieldemm.setText("");
            jTextFieldeyyyy.setText("");
            jTextFieldeNationality.setText("");
            jTextFieldeHourTax.setText("");
            jTextFieldePositionName.setText("");
        } catch (NullPointerException npe) {
            jLabelErrorMessageAddEmpl.setText("First you have to enter empl file");
        }
    }//GEN-LAST:event_btnAddEmplActionPerformed

    /**
     * Method to sort employees by ID when press btn
     *
     * @param evt
     */
    private void btnEmplsSortByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmplsSortByIDActionPerformed
        try {
            String emplInfo = pay.getEmployeesInfoSortedByID();
            emplInfo.split(System.lineSeparator());
            textAreaEmployeeShowInfo.setText(emplInfo);
        } catch (NullPointerException npe) {
            textAreaEmployeeShowInfo.setText("First you have to enter empl file");
        }
    }//GEN-LAST:event_btnEmplsSortByIDActionPerformed

    /**
     * Method to sort emplyees by first name when press btn
     *
     * @param evt
     */
    private void btnEmplsSortByFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmplsSortByFirstNameActionPerformed
        try {
            String emplInfo = pay.getEmployeesInfoSortedByFirstName();
            emplInfo.split(System.lineSeparator());
            textAreaEmployeeShowInfo.setText(emplInfo);
        } catch (NullPointerException npe) {
            textAreaEmployeeShowInfo.setText("First you have to enter empl file");
        }
    }//GEN-LAST:event_btnEmplsSortByFirstNameActionPerformed

    /**
     * Method to sort emplyees by last name when press btn
     *
     * @param evt
     */
    private void btnEmplsSortByLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmplsSortByLastNameActionPerformed
        try {
            String emplInfo = pay.getEmployeesInfoSortedByLastName();
            emplInfo.split(System.lineSeparator());
            textAreaEmployeeShowInfo.setText(emplInfo);
        } catch (NullPointerException npe) {
            textAreaEmployeeShowInfo.setText("First you have to enter empl file");
        }
    }//GEN-LAST:event_btnEmplsSortByLastNameActionPerformed

    /**
     * Method to save added employee when press btn
     *
     * @param evt
     */
    private void btnEmplsSaveAddedEmplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmplsSaveAddedEmplActionPerformed
        try {
            String employeeFile = null;
            try {
                employeeFile = employeeFileName();
            } catch (Exception ex) {
                jLabelErrorMessageAddEmpl.setText("File finding - failed");
                ex.getStackTrace();
            }
            try {
                pay.saveAddedEmployees(employeeFile);
                jLabelErrorMessageAddEmpl.setText("Added employees were SAVED");
            } catch (IOException ex) {
                jLabelErrorMessageAddEmpl.setText("Saving data to file - failed");
            }
            String emplInfo = pay.getEmployeesInfo();
            emplInfo.split(System.lineSeparator());
            textAreaShowListAfterAddedEmpl.setText(emplInfo);
        } catch (NullPointerException npe) {
            jLabelErrorMessageAddEmpl.setText("First you have to enter empl file");
        }
    }//GEN-LAST:event_btnEmplsSaveAddedEmplActionPerformed

    /**
     * Method to get employee's info with header
     *
     * @param e - Employee
     * @return String
     */
    protected String getEmployeeWithHeaderToString(Employee e) {
        StringBuilder sb = new StringBuilder("");
        sb.append(String.format("%-5s%-20s%-20s%-15s%-15s%-15s%-20s%n", "ID", "FirstName", "LastName", "BirthDate", "Country", "CZK/hour", "Position"));
        sb.append(e.toString());
        return sb.toString();
    }

    /**
     * Method to show added employee's info before add to list
     *
     * @param evt
     */
    private void btnEmplShowBeforeAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmplShowBeforeAddActionPerformed
        try {
            Employee e = addEmployee();
            textAreaShowListAfterAddedEmpl.setText(getEmployeeWithHeaderToString(e));
        } catch (NullPointerException npe) {
            textAreaShowListAfterAddedEmpl.setText("Employee is null");
        }
    }//GEN-LAST:event_btnEmplShowBeforeAddActionPerformed

    /**
     * Method to find employee by ID inserted in textfield when press btn
     *
     * @param evt
     */
    private void btnFindEmplByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindEmplByIDActionPerformed
        try {
            String sid = jTextFieldEmplSearchForID.getText();
            int id = 0;
            try {
                try {
                    id = Integer.parseInt(sid);
                } catch (NumberFormatException nfe) {
                    textAreaEmployeeShowInfo.setText("ID must be integer");
                }
                Employee e = pay.findEmployee(id);
                textAreaEmployeeShowInfo.setText(getEmployeeWithHeaderToString(e));
                jTextFieldEmplSearchForID.setText("");
            } catch (NoSuchElementException nsee) {
                textAreaEmployeeShowInfo.setText(nsee.toString());
            }
        } catch (NullPointerException npe) {
            textAreaEmployeeShowInfo.setText("First you have to enter empl file");
        }

    }//GEN-LAST:event_btnFindEmplByIDActionPerformed

    /**
     * Method to load working hours (work.txt) file when press enter in
     * textfield
     *
     * @return String
     * @throws IllegalInputFromUser
     */
    private String wageFileName() throws IllegalInputFromUser {
        String wageFile = jTextFieldWageFilePath.getText();
        boolean checksuffix = wageFile.endsWith(".txt") || wageFile.endsWith(".dat");
        if (checksuffix) {
            return wageFile;
        } else {
            throw new IllegalInputFromUser("Wrong file format - must be .txt or .dat");
        }
    }

    private void jTextFieldWageFilePathKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldWageFilePathKeyPressed
        String wageFile = null;
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                wageFile = wageFileName();
                jLabelWageEnterFileMessage.setText("File have been found...");
            } catch (NullPointerException npe) {
                jLabelWageEnterFileMessage.setText("Employees file not found or is empty");
            } catch (IllegalInputFromUser iifu) {
                jLabelWageEnterFileMessage.setText(iifu.toString());
            }
            boolean makingDir = Writer.dataDirectory.mkdir();
            if (makingDir) {
                jLabelWageEnterFileMessage.setText("New directory has been created, press enter to continue");
            }
            try {
                File file = new File(Writer.dataDirectory, wageFile);
                if (file.exists()) {
                    try {
                        pay.loadHours(wageFile);
                        jLabelWageEnterFileMessage.setText("File have been loaded");
                    } catch (NoSuchElementException e) {
                        jLabelWageEnterFileMessage.setText("The Employee ID could not be found. Try to load empl file");
                    } catch (IOException ex) {
                        jLabelWageEnterFileMessage.setText("Parsing hours failed");
                    }
                } else {
                    jLabelWageEnterFileMessage.setText("This file does not exist. Press MakeNewFile to create a new file");
                }
            } catch (NullPointerException npe) {
                jLabelWageEnterFileMessage.setText("FileField is null or unsupported file format, please write or select another file");
            }
        }
    }//GEN-LAST:event_jTextFieldWageFilePathKeyPressed

    /**
     * Method to create new working hours file when press btn
     *
     * @param evt
     */
    private void jButtonWageMakeNewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWageMakeNewFileActionPerformed
        try {
            String wageFile = null;
            try {
                wageFile = wageFileName();
            } catch (IllegalInputFromUser iifu) {
                jLabelWageEnterFileMessage.setText(iifu.toString());
            }
            File file = new File(Writer.dataDirectory, wageFile);
            jLabelWageEnterFileMessage.setText("Making new dir");
            try {
                if (!file.exists()) {
                    file.createNewFile();
                    jLabelWageEnterFileMessage.setText("New file has been made.");
                } else {
                    jLabelWageEnterFileMessage.setText("This file already exists");
                }
            } catch (IOException ex) {
                jLabelWageEnterFileMessage.setText("Creating new file failed!!!");
            }
        } catch (NullPointerException npe) {
            jLabelWageEnterFileMessage.setText("First you have to enter wage/empl file");
        }
    }//GEN-LAST:event_jButtonWageMakeNewFileActionPerformed

    /**
     * Method to show employees with their working hours when press btn
     *
     * @param evt
     */
    private void jButtonWageShowHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWageShowHoursActionPerformed
        try {
            String wageInfo = pay.getHoursInfo();
            wageInfo.split(System.lineSeparator());
            textAreaWage.setText(wageInfo);
        } catch (NullPointerException npe) {
            textAreaWage.setText("First you have to enter wage/empl file");
        }
    }//GEN-LAST:event_jButtonWageShowHoursActionPerformed

    /**
     * Method to add new working hours to employee's ID
     *
     * @return Wage
     */
    private Wage addWageHours() {
        String sid = jTextFieldWageAddHoursEID.getText();
        String shours = jTextFieldWageEnterWorkHours.getText();
        try {
            int id = Integer.parseInt(sid);
            int hours = Integer.parseInt(shours);
            Employee e = pay.findEmployee(id);
            Wage wage = new Wage(e, hours);
            jTextFieldWageAddHoursEID.setText("");
            jTextFieldWageEnterWorkHours.setText("");
            return wage;
        } catch (NumberFormatException ex) {
            textAreaWage.setText("Parsing failed - id, hours must be integer");
        } catch (NoSuchElementException nsex) {
            textAreaWage.setText("Employee with ID: " + sid + " is not in list!");
        }
        return null;
    }

    /**
     * Method to add wotking hours to employee's ID when press btn
     *
     * @param evt
     */
    private void jButtonAddHoursToEIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddHoursToEIDActionPerformed
        try {
            Wage wage = addWageHours();
            pay.addWageToList(wage);
            String wageInfo = pay.getHoursInfo();
            wageInfo.split(System.lineSeparator());
            textAreaWage.setText(wageInfo);
        } catch (NullPointerException npe) {
            textAreaWage.setText("Failed to assign working hours to employee's ID, try to load Employee file");
        }
    }//GEN-LAST:event_jButtonAddHoursToEIDActionPerformed

    /**
     * Method to calculate wages for employees with working houres when press
     * btn
     *
     * @param evt
     */
    private void jButtonWageCalculateWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWageCalculateWActionPerformed
        try {
            pay.calculateWages();
            String wageInfo = pay.getWagesInfo();
            wageInfo.split(System.lineSeparator());
            textAreaWage.setText(wageInfo);
        } catch (NullPointerException npe) {
            textAreaWage.setText("First you have to enter wage/empl file");
        }
    }//GEN-LAST:event_jButtonWageCalculateWActionPerformed

    /**
     * Method to save added wokring hours to work file
     *
     * @param evt
     */
    private void jButtonWageSaweEIDhoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWageSaweEIDhoursActionPerformed
        try {
            String wagesFile = null;
            try {
                wagesFile = wageFileName();
            } catch (IllegalInputFromUser iifu) {
                textAreaWage.setText(iifu.toString());
            }
            try {
                pay.saveAddedHours(wagesFile);
                textAreaWage.setText("Added hours were saved");
            } catch (IOException ex) {
                textAreaWage.setText("Saving data to file - failed");
            }
        } catch (NullPointerException npe) {
            textAreaWage.setText("First you have to enter wage/empl file");
        }
    }//GEN-LAST:event_jButtonWageSaweEIDhoursActionPerformed

//jComboBox dir folder
//        String[] files = filehandling.Writer.dataDirectory.list();
//        for (String file : files){
//            jComboBox1.addItem(file);
//        }
//        jComboBox1.setVisible(true);
    /**
     * Method to roll options of employee's files (empl) in folder
     * "\currentDir\data"
     *
     * @param evt
     */
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String employeeFile = jComboBox1.getSelectedItem().toString();
        if (!employeeFile.isEmpty()) {
            tfEnterFileEmpl.setText(employeeFile);
        }
        tfEnterFileEmpl.requestFocus();

    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * Method to roll options of working hours (work) files in folder
     * "\currentDir\data"
     *
     * @param evt
     */
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        String wageFile = jComboBox2.getSelectedItem().toString();
        if (!wageFile.isEmpty()) {
            jTextFieldWageFilePath.setText(wageFile);
        }
        jTextFieldWageFilePath.requestFocus();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * Method to obtain result file name from textfield
     *
     * @return String
     * @throws IllegalInputFromUser
     */
    private String resultFileName() throws IllegalInputFromUser {
        String resultFile = jTextFieldWageResultsFileName.getText();
        boolean checksuffix = resultFile.endsWith(".txt") || resultFile.endsWith(".dat") || resultFile.endsWith(".xlsx");
        if (checksuffix) {
            return resultFile;
        } else {
            throw new IllegalInputFromUser("Unsupported format. Must be .txt/.dat/.xlsx");
        }
    }

    /**
     * Method to save calculated wages to result file
     * @param evt
     */
    private void jButtonWageSaveCalculatedWageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWageSaveCalculatedWageActionPerformed
        try {
            String resultFile = null;
            try {
                resultFile = resultFileName();
            } catch (IllegalInputFromUser iifu) {
                jLabelWageResultFileErrorMessage.setText(iifu.toString());
            }
            try {
                pay.saveWages(resultFile);
                jLabelWageResultFileErrorMessage.setText("Saved");
            } catch (IOException ex) {
                jLabelWageResultFileErrorMessage.setText("Saving - failed");
            } catch (NullPointerException nlp) {
                jLabelWageResultFileErrorMessage.setText("Result fname - null");
            }
        } catch (NullPointerException npe) {
            textAreaWage.setText("First you have to enter wage/empl file");
        }
    }//GEN-LAST:event_jButtonWageSaveCalculatedWageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EmplMenuPanel;
    private javax.swing.JPanel WageMenuPanel;
    private javax.swing.JButton btnAddEmpl;
    private javax.swing.JButton btnEmplShowBeforeAdd;
    private javax.swing.JButton btnEmplsSaveAddedEmpl;
    private javax.swing.JButton btnEmplsSortByFirstName;
    private javax.swing.JButton btnEmplsSortByID;
    private javax.swing.JButton btnEmplsSortByLastName;
    private javax.swing.JButton btnFindEmplByID;
    private javax.swing.JButton btnMakeNewFile;
    private javax.swing.JButton btnShowEmpls;
    private javax.swing.JButton jButtonAddHoursToEID;
    private javax.swing.JButton jButtonWageCalculateW;
    private javax.swing.JButton jButtonWageMakeNewFile;
    private javax.swing.JButton jButtonWageSaveCalculatedWage;
    private javax.swing.JButton jButtonWageSaweEIDhours;
    private javax.swing.JButton jButtonWageShowHours;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabelEmplsSorting;
    private static javax.swing.JLabel jLabelErrorMessageAddEmpl;
    private javax.swing.JLabel jLabelSearchForID;
    private javax.swing.JLabel jLabelWageAddHoursToEmplID;
    private javax.swing.JLabel jLabelWageCalculate;
    private javax.swing.JLabel jLabelWageEnterEmplID;
    private static javax.swing.JLabel jLabelWageEnterFileMessage;
    private javax.swing.JLabel jLabelWageEnterWorkHours;
    private javax.swing.JLabel jLabelWageFileWhours;
    private javax.swing.JLabel jLabelWageResultFileErrorMessage;
    private javax.swing.JLabel jLabelWageResultsFileName;
    private javax.swing.JLabel jLabeleDateOfBirth;
    private javax.swing.JLabel jLabeleHourTax;
    private javax.swing.JLabel jLabeleID;
    private javax.swing.JLabel jLabeleLastName;
    private javax.swing.JLabel jLabeleName;
    private javax.swing.JLabel jLabeleNationality;
    private javax.swing.JLabel jLabelePositionName;
    private javax.swing.JLabel jLabeledd;
    private javax.swing.JLabel jLabelemm;
    private javax.swing.JLabel jLabeleyyyy;
    private javax.swing.JPanel jPanelAddNewEmpl;
    private javax.swing.JPanel jPanelLoadShowEmpls;
    private javax.swing.JPanel jPaneladdEmplData;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPaneEW;
    private static javax.swing.JTextField jTextFieldEmplSearchForID;
    private static javax.swing.JTextField jTextFieldWageAddHoursEID;
    private static javax.swing.JTextField jTextFieldWageEnterWorkHours;
    private javax.swing.JTextField jTextFieldWageFilePath;
    private javax.swing.JTextField jTextFieldWageResultsFileName;
    private static javax.swing.JTextField jTextFieldeHourTax;
    private static javax.swing.JTextField jTextFieldeID;
    private static javax.swing.JTextField jTextFieldeLastName;
    private static javax.swing.JTextField jTextFieldeName;
    private static javax.swing.JTextField jTextFieldeNationality;
    private static javax.swing.JTextField jTextFieldePositionName;
    private static javax.swing.JTextField jTextFieldeedd;
    private static javax.swing.JTextField jTextFieldemm;
    private static javax.swing.JTextField jTextFieldeyyyy;
    private javax.swing.JLabel lbMakeFileMessage;
    private static java.awt.TextArea textAreaEmployeeShowInfo;
    private static java.awt.TextArea textAreaShowListAfterAddedEmpl;
    private static java.awt.TextArea textAreaWage;
    private java.awt.TextField tfEnterFileEmpl;
    // End of variables declaration//GEN-END:variables
}
